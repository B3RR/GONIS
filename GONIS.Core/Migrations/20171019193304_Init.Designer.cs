// <auto-generated />
using GONIS.Core.Helper.EntityFramework;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage;
using Microsoft.EntityFrameworkCore.Storage.Internal;
using System;

namespace GONIS.Core.Migrations
{
    [DbContext(typeof(DataBase))]
    [Migration("20171019193304_Init")]
    partial class Init
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.0.0-rtm-26452")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("GONIS.Core.Model.Security.Role", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Description")
                        .HasMaxLength(100);

                    b.Property<bool>("IsDel");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(255);

                    b.Property<DateTime>("WhenCreated");

                    b.Property<DateTime?>("WhenUpdated");

                    b.Property<string>("WhoCreated");

                    b.Property<string>("WhoUpdated");

                    b.HasKey("Id");

                    b.HasIndex("Name")
                        .IsUnique();

                    b.ToTable("Roles");
                });

            modelBuilder.Entity("GONIS.Core.Model.Security.RolesUsers", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<bool>("IsDel");

                    b.Property<int>("RoleId");

                    b.Property<int>("UserId");

                    b.Property<DateTime>("WhenCreated");

                    b.Property<DateTime?>("WhenUpdated");

                    b.Property<string>("WhoCreated");

                    b.Property<string>("WhoUpdated");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.HasIndex("RoleId", "UserId")
                        .IsUnique();

                    b.ToTable("RolesUsers");
                });

            modelBuilder.Entity("GONIS.Core.Model.Security.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("FIO")
                        .HasMaxLength(255);

                    b.Property<bool>("IsDel");

                    b.Property<string>("Login")
                        .IsRequired()
                        .HasMaxLength(100);

                    b.Property<DateTime>("WhenCreated");

                    b.Property<DateTime?>("WhenUpdated");

                    b.Property<string>("WhoCreated");

                    b.Property<string>("WhoUpdated");

                    b.HasKey("Id");

                    b.HasIndex("Login")
                        .IsUnique();

                    b.ToTable("Users");
                });

            modelBuilder.Entity("GONIS.Core.Model.Security.RolesUsers", b =>
                {
                    b.HasOne("GONIS.Core.Model.Security.Role", "Role")
                        .WithMany("RolesUsers")
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("GONIS.Core.Model.Security.User", "User")
                        .WithMany("RolesUsers")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade);
                });
#pragma warning restore 612, 618
        }
    }
}
